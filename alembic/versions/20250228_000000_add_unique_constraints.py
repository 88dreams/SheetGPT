"""Add unique constraints for stadium, league, and team names

Revision ID: add_unique_constraints
Revises: cleanup_duplicates
Create Date: 2025-02-28 00:00:00.000000+00:00 # Placeholder date

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'add_unique_constraints' # Non-standard ID
down_revision: Union[str, None] = 'cleanup_duplicates' # This needs to be the actual previous revision ID
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_unique_constraint('uq_stadiums_name', 'stadiums', ['name'])
    op.execute("""
        DO $$
        BEGIN
            IF NOT EXISTS (
                SELECT 1 FROM pg_constraint
                WHERE conname = 'uq_leagues_name'
            ) THEN
                ALTER TABLE leagues ADD CONSTRAINT uq_leagues_name UNIQUE (name);
            END IF;
        END;
        $$;
    """)
    # op.create_unique_constraint('uq_teams_name', 'teams', ['name'])
    pass # Made no-op as these should be created by the main table creation migration
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint('uq_teams_name', 'teams', type_='unique')
    op.execute("ALTER TABLE leagues DROP CONSTRAINT IF EXISTS uq_leagues_name;")
    # op.drop_constraint('uq_stadiums_name', 'stadiums', type_='unique')
    pass # Made no-op
    # ### end Alembic commands ### 