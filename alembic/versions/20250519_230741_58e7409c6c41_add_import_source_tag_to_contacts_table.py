"""add import_source_tag to contacts table

Revision ID: 58e7409c6c41
Revises: 75490244d03c
Create Date: 2025-05-19 23:07:41.702093+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# from sqlalchemy.dialects import postgresql # Not needed for this minimal version

# revision identifiers, used by Alembic.
revision: str = '58e7409c6c41'
down_revision: Union[str, None] = '75490244d03c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - JETTRO MODIFIED TO MINIMAL ###
    # op.drop_table('system_metadata') # Keep system_metadata for now
    op.add_column('contacts', sa.Column('import_source_tag', sa.String(length=255), nullable=True))
    op.create_index(op.f('ix_contacts_import_source_tag'), 'contacts', ['import_source_tag'], unique=False)
    # op.drop_index('ix_stadiums_name', table_name='stadiums') # Keep stadiums.name index as is for now
    # op.create_index(op.f('ix_stadiums_name'), 'stadiums', ['name'], unique=True) # Keep stadiums.name index as is for now
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - JETTRO MODIFIED TO MINIMAL ###
    # op.drop_index(op.f('ix_stadiums_name'), table_name='stadiums') # Keep stadiums.name index as is for now
    # op.create_index('ix_stadiums_name', 'stadiums', ['name'], unique=False) # Keep stadiums.name index as is for now
    op.drop_index(op.f('ix_contacts_import_source_tag'), table_name='contacts')
    op.drop_column('contacts', 'import_source_tag')
    # op.create_table('system_metadata', # Keep system_metadata for now
    # sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    # sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('key', name='system_metadata_pkey')
    # )
    # ### end Alembic commands ### 