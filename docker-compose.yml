services:
  # Development services
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - .:/workspace:cached
      - /workspace/frontend/node_modules
    environment:
      - VITE_API_URL=http://backend:8000
      - VITE_ENABLE_DEV_FALLBACKS=false
      - VITE_MOCK_DATA=false
      - VITE_DISABLE_ALL_MOCK_DATA=true
      - FORCE_REAL_DATA=true
      - NODE_ENV=production
    depends_on:
      - backend

  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    volumes:
      - ./frontend:/app
      - ./tests:/tests
      - /app/node_modules
    environment:
      - CI=true

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
      # Use the development backend target
      target: backend-dev
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./credentials:/app/credentials
      - local-data:/app/data
    environment:
      - ENVIRONMENT=development
      - DEBUG=True
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/sheetgpt
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - LINKEDIN_CLIENT_ID=${LINKEDIN_CLIENT_ID}
      - LINKEDIN_CLIENT_SECRET=${LINKEDIN_CLIENT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      - db

  # Production service for local testing
  app:
    build: 
      context: .
      dockerfile: Dockerfile
      # Use the production backend target
      target: backend-prod
    ports:
      - "8080:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/sheetgpt
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CORS_ORIGINS=http://localhost:8000,https://your-app.ondigitalocean.app
    depends_on:
      - db
    # For Digital Ocean deployment, this service would be used

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sheetgpt
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  local-data:
    # Using a local volume instead of external network storage
  postgres-data:
    # Using a named volume for better persistence
    # This ensures data is preserved across container restarts and rebuilds